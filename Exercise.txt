# **Проект: Обучение и сравнение ансамблей деревьев решений с использованием параллельных вычислений**

## **Описание задачи**
Необходимо разработать проект на **Python** для обучения и сравнения ансамблей деревьев решений (**Random Forest**, **HistGradientBoosting**, **LightGBM**) с применением **параллельных вычислений** для ускорения процесса обучения.  

Проект должен включать:  
1. Обучение моделей с использованием параллельных вычислений.  
2. Тестирование моделей на одном и том же наборе данных.  
3. Измерение времени выполнения для каждой модели.  
4. Итоговое сравнение производительности моделей по заданным метрикам.

---

## **Метрики для сравнения моделей**

Для оценки производительности обученных моделей необходимо использовать следующие **классификационные метрики**:

1. **Accuracy (Точность)**  
   - Доля правильно классифицированных объектов относительно общего числа примеров.  
   - Формула:  
     \[
     Accuracy = \frac{TP + TN}{TP + TN + FP + FN}
     \]

2. **Precision (Точность для положительного класса)**  
   - Доля правильно предсказанных положительных объектов среди всех объектов, предсказанных как положительные.  
   - Формула:  
     \[
     Precision = \frac{TP}{TP + FP}
     \]

3. **Recall (Полнота, чувствительность)**  
   - Доля правильно предсказанных положительных объектов среди всех истинно положительных объектов.  
   - Формула:  
     \[
     Recall = \frac{TP}{TP + FN}
     \]

4. **F1-Score (Среднее гармоническое Precision и Recall)**  
   - Уравновешивает Precision и Recall в одной метрике.  
   - Формула:  
     \[
     F1 = 2 \times \frac{Precision \cdot Recall}{Precision + Recall}
     \]

5. **Confusion Matrix (Матрица ошибок)**  
   - Отображает распределение предсказаний по четырём категориям:  
     - **TP (True Positive)** — истинно положительные предсказания.  
     - **TN (True Negative)** — истинно отрицательные предсказания.  
     - **FP (False Positive)** — ложно положительные предсказания.  
     - **FN (False Negative)** — ложно отрицательные предсказания.

6. **Время обучения (Time Taken)**  
   - Общее время, затраченное на обучение модели. Эта метрика особенно важна при использовании параллельных вычислений для оценки их эффективности.

---

## **Цель проекта**
Сравнить производительность ансамблей деревьев решений (**Random Forest**, **HistGradientBoosting**, **LightGBM**) по метрикам качества предсказаний и времени выполнения. Использовать параллельные вычисления для ускорения процесса обучения моделей и продемонстрировать их эффективность.

---  
